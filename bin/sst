#! /bin/bash

ABSPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
ROOT_DIR=$(echo "$ABSPATH" | tr '/' '\n' | xargs -E bin | tr ' ' '/' | awk '{print "/" $0}')

# shellcheck disable=SC1090
for u in $ROOT_DIR/utils/*.sh; do source "$u"; done
for p in $ROOT_DIR/packages/*.sh; do source "$p"; done

get_package_info

usage(){
cat <<EOF
USAGE: sst [OPTIONS] [PACKAGES]
    System Setup Tool - Installs and configures software and working 
    environments on unix-based systems.

    List of available packages for installation:
EOF
echo -e "$PKG_INFO" | awk -F '+++' '
{ gsub(/.{45,50} /,"&\n                               ",$2)
  printf "        - %-20s %s\n", $1, $2 }'
cat <<EOF

    After the installation, remember to:
        - Use 'prefix + I' when first starting tmux to install plugins.
    If you installed fusuma:
        1. Check fusuma installation path using 'which fusuma'.
        2. Press alt + F2, enter 'gnome-session-properties'.
        3. Add fusuma using the -d option.

OPTIONS:
    -i|--install               All packages specified after this argument will
                               be installed. This flag is active by default.
    -r|--remove                All packages specified after this argument will
                               be removed. Removals will be done before
                               installations.
    -s|--status                Prints installation status for each known command
                               as part of each package respectively.
EOF
}

main(){
  verify_package_completeness
  if [ -z "$PACKAGES_TO_INSTALL" ] && [ -z "$PACKAGES_TO_UNINSTALL" ]; then
    usage
    exit 0
  fi

  check_which_os
  for PACKAGE in $PACKAGES_TO_UNINSTALL; do
    uninstall_"$PACKAGE"
  done
  for PACKAGE in $PACKAGES_TO_INSTALL; do
    install_"$PACKAGE"
  done
}

unset OS
unset PACKAGES_TO_INSTALL
unset PACKAGES_TO_UNINSTALL
install=true

while [[ $# -gt 0 ]]; do

  if is_package_name "$1" ; then
    if [ "$install" = true ] ; then
      PACKAGES_TO_INSTALL="${PACKAGES_TO_INSTALL} $1"
    else
      PACKAGES_TO_UNINSTALL="${PACKAGES_TO_UNINSTALL} $1"
    fi
    shift 1
  else
    case $1 in
      -h|--help)
      usage
      exit 0 ;;

      -i|--install)
      install=true
      shift 1 ;;

      -u|--uninstall)
      install=false
      shift 1 ;;

      -s|--status)
      print_status
      exit 0 ;;

      *)
      echo_error "Unknown option: $1";
      usage
      exit 1 ;;
    esac
  fi

done
main
