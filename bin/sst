#! /bin/bash

ABSPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
ROOT_DIR=$(echo "$ABSPATH" | tr '/' '\n' | xargs -E bin | tr ' ' '/' | awk '{print "/" $0}')

# shellcheck disable=SC1090
for u in $ROOT_DIR/utils/*.sh; do source "$u"; done
for p in $ROOT_DIR/packages/*.sh; do source "$p"; done

get_package_info

usage(){
cat <<EOF
USAGE: sst [OPTIONS] [PACKAGES]
    Marcus' system setup tool - installs and configures software and working
    environment on unix-based systems.

    List of available packages for installation:
EOF
printf '        - %-20s %-10s\n' "${PKG_INFO[@]}"
cat <<EOF

    Tested on :
        - Ubuntu 18.04
        - macOS Mojave

    After the installation, remember to:
        - Use 'prefix + I' when first starting tmux to install plugins.
    If you installed fusuma:
        1. Check fusuma installation path using 'which fusuma'.
        2. Press alt + F2, enter 'gnome-session-properties'.
        3. Add fusuma using the -d option.

OPTIONS:
    -u|--uninstall             Flag all packages after this argument for uninstall.
    -l|--linux                 Explicitly specify linux as operating system.
    -m|--mac                   Explicitly specify macOS as operating system.
       --uninstall_nvidia      Uninstalls all nvidia software. If specified, the
                               script will exit afterwards.
       --uninstall_docker      Uninstalls docker. If specified, the script will
                               exit afterwards.
EOF
}

uninstall_nvidia_all(){
  if [ ! "$OS" = "linux" ]; then
    echo_red "uninstalling nvidia software is currently only implemented for linux" && return 1
  fi

  read -p "Do you really want to uninstall all nvidia software [y/n]? " -n 1 -r
  echo
  if [ ! "$REPLY" = Y ] && [ ! "$REPLY" = y ]; then
    echo_red "Exiting." && exit 1
  else
    sudo apt-get -y purge '^nvidia-.*'
    sudo apt-get -y purge '^libnvidia-.*'
    sudo apt-get -y autoremove
  fi
}

configure_vim(){
  tic -o ~/.terminfo $ROOT_DIR/config/xterm-256color.terminfo
  export TERM=xterm-256color

  # Install Vundle
  git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
}


main(){
   verify_package_completeness
  if [ -z "$PACKAGES_TO_INSTALL" ] && [ -z "$PACKAGES_TO_UNINSTALL" ]; then
    echo_red "No packages specified."
    usage
    exit 0
  fi

  check_which_os
  for PACKAGE in $PACKAGES_TO_UNINSTALL; do
    uninstall_"$PACKAGE"
  done
  for PACKAGE in $PACKAGES_TO_INSTALL; do
    install_"$PACKAGE"
  done
}

unset OS
unset PACKAGES_TO_INSTALL
unset PACKAGES_TO_UNINSTALL
install=true

while [[ $# -gt 0 ]]; do

  if is_package_name "$1" ; then
    if [ "$install" = true ] ; then
      PACKAGES_TO_INSTALL="${PACKAGES_TO_INSTALL} $1"
    else
      PACKAGES_TO_UNINSTALL="${PACKAGES_TO_UNINSTALL} $1"
    fi
    shift 1
  else
    case $1 in
      -h|--help)
      usage
      exit 0 ;;

      -l|--linux)
      OS="linux"
      shift 1 ;;

      -m|--mac)
      OS="mac"
      shift 1 ;;

      -u|--uninstall)
      install=false
      shift 1 ;;

      --uninstall_nvidia)
      uninstall_nvidia_all
      exit 0 ;;

      --uninstall_docker)
      uninstall_docker
      exit 0 ;;

      *)
      echo_red "Unknown option: $1";
      usage
      exit 1 ;;
    esac
  fi

done
main
