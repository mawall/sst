#! /bin/bash

ABSPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
ROOT_DIR=$(echo "$ABSPATH" | tr '/' '\n' | xargs -E bin | tr ' ' '/' | awk '{print "/" $0}')
CONFIG="$HOME/.config/sesame/sesame.cfg"

create_config(){
  mkdir -p $(dirname "$CONFIG")
  touch $CONFIG
  set_config "SESAME_METHOD" "cryfs"
}

# import utils
# shellcheck disable=SC1090
for u in $ROOT_DIR/utils/*.sh; do source "$u"; done

#import config
if [ -f "$CONFIG" ]; then source $CONFIG; else create_config && source $CONFIG; fi


usage(){
cat <<EOF
USAGE: sesame [OPTIONS]
    A convenience utility to handle directory encryption using ecryptfs or cryfs.

OPTIONS:
    -o|--open               Mount and decrypt private directory as sesame.
    -c|--close              Encrypt and unmount sesame.
    -s|--status             Print mount status.
    -m|--method             Choose which encryption utility to use. The default
                            method is cryfs.

EOF
}

sesame_open(){
  mkdir -p $MOUNT_DIR
  while [ ! -d $MOUNT_DIR ]; do
    true  # waiting
  done

  if [ "$SESAME_METHOD" = "ecryptfs" ]; then
    sudo mount -t ecryptfs -o "ecryptfs_cipher=aes,ecryptfs_key_bytes=16,ecryptfs_passthrough=no,ecryptfs_enable_filename_crypto=yes" $SESAME_DIR $MOUNT_DIR
  elif [ "$SESAME_METHOD" = "cryfs" ] || [ -z "$SESAME_METHOD" ]; then
    cryfs $SESAME_DIR $MOUNT_DIR
  else
    echo_red "Unknown encryption method"
  fi
}

sesame_close(){
  if [ "$SESAME_METHOD" = "ecryptfs" ]; then
    sudo umount $MOUNT_DIR
  elif [ "$SESAME_METHOD" = "cryfs" ] || [ -z "$SESAME_METHOD" ]; then
    cryfs-unmount $MOUNT_DIR
  else
    echo_red "Unknown encryption method"
  fi

  while mountpoint -q $MOUNT_DIR; do
    true  # waiting
  done
  rm -r $MOUNT_DIR
}

sesame_status(){
  if mountpoint -q $MOUNT_DIR; then
    echo_green "Sesame is open"
  else
    echo_red "Sesame is closed"
  fi
  echo "[method] $SESAME_METHOD"
}

set_method(){
  choices=("cryfs" "ecryptfs")
  display_len=$(( ${#choices[@]} > 10 ? 10 : ${#choices[@]} ))
  selection=$(printf '%s\n' "${choices[@]}" | fzf --height=$display_len)
  set_config "SESAME_METHOD" "$selection" && echo "[method] Updated to $selection"
}

SESAME_DIR=$HOME/Dropbox/private
MOUNT_DIR=$HOME/mnt/sesame
while [[ $# -gt 0 ]]; do

  case $1 in
    -h|--help|help)
    usage
    exit 0 ;;

    -o|--open|open)
    sesame_open
    shift 1 ;;

    -c|--close|close)
    sesame_close
    shift 1 ;;

    -s|--status|status)
    sesame_status
    shift 1 ;;

    -m|--method|method)
    set_method
    shift 1 ;;

    *)
    echo_red "Unknown option: $1";
    usage
    exit 1 ;;
  esac

done